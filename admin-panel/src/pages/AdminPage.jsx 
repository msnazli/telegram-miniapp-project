import React, { useEffect, useState } from 'react';

const AdminPage = () => {
  const [language, setLanguage] = useState('fa');
  const [translations, setTranslations] = useState({});
  const [newKey, setNewKey] = useState('');
  const [newValue, setNewValue] = useState('');

  // دریافت ترجمه‌ها از سرور برای زبان انتخاب‌شده
  const fetchTranslations = async () => {
    try {
      const res = await fetch(`http://localhost:5000/api/translations/${language}`);
      const data = await res.json();
      setTranslations(data || {});
    } catch (err) {
      console.error('خطا در دریافت ترجمه‌ها', err);
    }
  };

  useEffect(() => {
    fetchTranslations();
  }, [language]);

  // ذخیره همه ترجمه‌ها در دیتابیس
  const handleSave = async () => {
    try {
      const res = await fetch(`http://localhost:5000/api/translations/${language}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(translations),
      });
      if (res.ok) alert('✅ ترجمه‌ها ذخیره شدند');
    } catch (err) {
      console.error('خطا در ذخیره', err);
    }
  };

  // افزودن کلید جدید
  const handleAddKey = () => {
    if (!newKey.trim()) return;
    setTranslations((prev) => ({
      ...prev,
      [newKey]: newValue,
    }));
    setNewKey('');
    setNewValue('');
  };

  // ویرایش مقدار یک کلید
  const handleEditKey = (key, value) => {
    setTranslations((prev) => ({
      ...prev,
      [key]: value,
    }));
  };

  // حذف کلید
  const handleDeleteKey = (key) => {
    const updated = { ...translations };
    delete updated[key];
    setTranslations(updated);
  };

  return (
    <div className="container mt-5">
      <h2 className="mb-4">مدیریت ترجمه‌ها</h2>

      <div className="mb-3">
        <label>انتخاب زبان:</label>
        <select value={language} onChange={(e) => setLanguage(e.target.value)} className="form-select w-auto d-inline-block ms-2">
          <option value="fa">فارسی</option>
          <option value="en">انگلیسی</option>
        </select>
      </div>

      <div className="mb-4 d-flex gap-2">
        <input
          type="text"
          placeholder="کلید جدید"
          value={newKey}
          onChange={(e) => setNewKey(e.target.value)}
          className="form-control w-25"
        />
        <input
          type="text"
          placeholder="مقدار"
          value={newValue}
          onChange={(e) => setNewValue(e.target.value)}
          className="form-control w-50"
        />
        <button onClick={handleAddKey} className="btn btn-success">افزودن</button>
      </div>

      <table className="table table-bordered">
        <thead>
          <tr>
            <th>کلید</th>
            <th>مقدار</th>
            <th>عملیات</th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(translations).map(([key, value]) => (
            <tr key={key}>
              <td>{key}</td>
              <td>
                <input
                  type="text"
                  value={value}
                  onChange={(e) => handleEditKey(key, e.target.value)}
                  className="form-control"
                />
              </td>
              <td>
                <button onClick={() => handleDeleteKey(key)} className="btn btn-danger btn-sm">حذف</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <button onClick={handleSave} className="btn btn-primary">💾 ذخیره</button>
    </div>
  );
};

export default AdminPage;
